language: c
sudo: false
dist: xenial
git:
  submodules: false
notifications:
  irc: "irc.freenode.net#haskell-raaz"
  on_success: always
  on_failure: always
  use_notice: false
  skip_join: false

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $HOME/.cabal/packages/head.hackage

fast_finish: true

addons:
  apt:
    packages:
      - libgmp-dev
    sources: [hvr-ghc]

matrix:
  fast-finish: true
  include:

    - os: osx

    - os: linux
      env: GHCVER=7.6.3 CABALVER=2.2
      addons: {apt: {packages: [cabal-install-2.2 ,ghc-8.2.2], sources: [hvr-ghc]}}

    - os: linux
      env: GHCVER=8.2.2 CABALVER=2.2
      addons: {apt: {packages: [cabal-install-2.2 ,ghc-8.2.2], sources: [hvr-ghc]}}

    - os: linux
      env: GHCVER=8.4.1 CABALVER=2.2
      addons: {apt: {packages: [cabal-install-2.2 ,ghc-8.4.1], sources: [hvr-ghc]}}

    - os: linux
      env: GHCVER=8.6.3 CABALVER=2.2
      addons: {apt: {packages: [cabal-install-2.2 ,ghc-8.4.1], sources: [hvr-ghc]}}

    # Build for the GHC head and cabal-install-head
    - os: linux
      env: GHCVER=head CABALVER=head
      addons: {apt: {packages: [cabal-install-head ,ghc-head], sources: [hvr-ghc]}}

    # Lint the code.
    - os: linux
      env: HLINT="yes"
      addons: {apt: {packages: [hlint], sources: [hvr-ghc]}}

  allow_failures:
    - env: GHCVER=head CABALVER=head
    - env: HLINT="yes"

before_install:
 - uname -a
 - if [ "$HLINT" == "yes" ]; then
      hlint "--ignore=Parse error" Raaz;
      exit $?;
   fi


 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH;

 - if [ -n "$STACKVER" ]; then ./scripts/stack-freeze.sh "$STACKVER"; fi # Sets up the appropriate freeze.
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install ghc cabal-install; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew info ghc cabal-install; fi
 - git submodule update --init
install:
 - ghc   --version
 - cabal --version
 - travis_retry cabal new-update;

script:
  - cabal new-configure --flags="wipe-memset" --enable-tests  --enable-documentation
  - cabal new-build all
  - cabal new-test all
  - cabal new-bench
  - $(find ./dist-newstyle -name raaz -type f) info
  - if [ "$LIQUID_HASKELL" == "yes" ]; then ./scripts/get-lh.sh && ./scripts/run-lh.sh; exit $?; fi

after_success:
  - echo "All is well."
after_failure:
  - echo "Build failed."

branches:
  only:
    - master
    - backpack
    - release-0.2.0
