{-# LANGUAGE ConstraintKinds             #-}
{-# LANGUAGE DataKinds                   #-}
{-# LANGUAGE KindSignatures              #-}
{-# LANGUAGE MultiParamTypeClasses       #-}
{-# LANGUAGE FlexibleInstances           #-}
{-# LANGUAGE TypeFamilies                #-}

-- | A digest primitive is something that computes a digest out of the
-- message that it produces. Examples include message hash, encrypted
-- authentication (the digest being the authentication tag). This
-- signatures captures the additional properties that makes a
-- primitive `Prim` a digest primitive. Essentially, this means that
-- one can extract the digest which is the type Prim itself.
signature Implementation where


import Raaz.Core

-- | The primitive for which the implementation is given

data Prim
instance Encodable Prim
instance Eq Prim
instance Equality Prim
instance Show Prim
instance IsString Prim
data Internals
instance Memory Internals
instance Extractable Internals Prim
